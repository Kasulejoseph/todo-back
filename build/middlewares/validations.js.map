{"version":3,"sources":["../../server/middlewares/validations.js"],"names":["validateTodo","not","isEmpty","validations","req","res","next","errors","status","json","array"],"mappings":";;;;;;;AAAA;;AAGA,MAAMA,YAAY,GAAG,CACnB,6BAAM,UAAN,EAAkB,sBAAlB,EACGC,GADH,GAEGC,OAFH,EADmB,EAInB,6BAAM,aAAN,EAAqB,yBAArB,EACGD,GADH,GAEGC,OAFH,EAJmB,EAOnB,6BAAM,SAAN,EAAiB,2BAAjB,EACGD,GADH,GAEGC,OAFH,EAPmB,CAArB;;AAYA,MAAMC,WAAW,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACtC,QAAMC,MAAM,GAAG,wCAAiBH,GAAjB,CAAf;;AACA,MAAI,CAACG,MAAM,CAACL,OAAP,EAAL,EAAuB;AACrB,WAAOG,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,MAAAA,MAAM,EAAE,GAAV;AAAeD,MAAAA,MAAM,EAAEA,MAAM,CAACG,KAAP;AAAvB,KAArB,CAAP;AACD;;AACDJ,EAAAA,IAAI;AACL,CAND;;QASSN,Y,GAAAA,Y;QAAcG,W,GAAAA,W","sourcesContent":["import { check, validationResult } from 'express-validator';\n\n\nconst validateTodo = [\n  check('category', 'Category is required')\n    .not()\n    .isEmpty(),\n  check('description', 'description is required')\n    .not()\n    .isEmpty(),\n  check('dueDate', 'dueDate feild is required')\n    .not()\n    .isEmpty()\n];\n\nconst validations = (req, res, next) => {\n  const errors = validationResult(req);\n  if (!errors.isEmpty()) {\n    return res.status(400).json({ status: 400, errors: errors.array() });\n  }\n  next();\n};\n\n\nexport { validateTodo, validations }\n"],"file":"validations.js"}