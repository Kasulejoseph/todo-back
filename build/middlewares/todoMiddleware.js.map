{"version":3,"sources":["../../server/middlewares/todoMiddleware.js"],"names":["todos","models","checkTodoExist","req","res","next","id","params","todo","findOne","where","error","status","send","message"],"mappings":";;;;;;;AACA;;;;;;AACA,MAAM;AAAEA,EAAAA;AAAF,IAAYC,gBAAlB;;AAEO,MAAMC,cAAc,WAAdA,cAAc,GAAG,OAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,KAA0B;AACtD,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAASH,GAAG,CAACI,MAAnB;AACA,UAAMC,IAAI,GAAG,MAAMR,KAAK,CAACS,OAAN,CAAc;AAACC,MAAAA,KAAK,EAAE;AAACJ,QAAAA;AAAD;AAAR,KAAd,CAAnB;;AACA,QAAI,CAACE,IAAL,EAAW;AACT,YAAM,gBAAN;AACD;;AACDL,IAAAA,GAAG,CAACK,IAAJ,GAAWA,IAAX;AACAH,IAAAA,IAAI;AACL,GARD,CAQE,OAAOM,KAAP,EAAc;AACd,WAAOP,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,MAAAA,OAAO,EAAEH;AAAV,KAArB,CAAP;AACD;AACF,CAZM","sourcesContent":["\nimport models from '../models';\nconst { todos } = models\n\nexport const checkTodoExist = async (req, res, next) => {\n  try {\n    const { id } = req.params\n    const todo = await todos.findOne({where: {id}})\n    if (!todo) {\n      throw 'todo not found';\n    }\n    req.todo = todo\n    next()\n  } catch (error) {\n    return res.status(404).send({message: error})\n  }\n};\n"],"file":"todoMiddleware.js"}